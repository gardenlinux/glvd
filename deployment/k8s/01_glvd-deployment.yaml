apiVersion: v1
kind: ConfigMap
metadata:
  name: glvd-config
  labels:
    app.kubernetes.io/name: glvd
    gardenlinux.io/glvd-component: glvd-tracker
data:
  connectionString: jdbc:postgresql://glvd-database-0.glvd-database:5432/glvd
  databaseName: glvd
---
apiVersion: v1
kind: Service
metadata:
  name: glvd
  labels:
    app.kubernetes.io/name: glvd
    gardenlinux.io/glvd-component: glvd-tracker
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: glvd
  selector:
    app.kubernetes.io/name: glvd
    gardenlinux.io/glvd-component: glvd-tracker
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: glvd-api-sa
automountServiceAccountToken: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: glvd
  labels:
    app.kubernetes.io/name: glvd
    gardenlinux.io/glvd-component: glvd-tracker
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: glvd
      gardenlinux.io/glvd-component: glvd-tracker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: glvd
        gardenlinux.io/glvd-component: glvd-tracker
    spec:
      serviceAccountName: glvd-api-sa
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
      - image: ghcr.io/gardenlinux/glvd-api:latest
        imagePullPolicy: Always
        name: glvd-api
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - '*'
        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
          limits:
            cpu: "1"
            memory: "2Gi"
        ports:
        - containerPort: 8080
          protocol: TCP
          name: glvd
        env:
        # cf https://github.com/spring-projects/spring-lifecycle-smoke-tests/tree/main/data/data-jpa#prevent-early-database-interaction
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: glvd-config
              key: connectionString
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        - name: SPRING_JPA_DATABASEPLATFORM
          value: "org.hibernate.dialect.PostgreSQLDialect"
        - name: SPRING_JPA_PROPERTIES_HIBERNATE_BOOT_ALLOW_JDBC_METADATA_ACCESS
          value: "false"
        - name: SPRING_JPA_HIBERNATE_DDLAUTO
          value: "none"
        - name: SPRING_SQL_INIT_MODE
          value: "never"
        livenessProbe:
          httpGet:
            path: "/actuator/health/liveness"
            port: 8080
        readinessProbe:
          httpGet:
            path: "/actuator/health/readiness"
            port: 8080
        # Mount tmp as emptyDir so we can have readOnlyRootFilesystem as true
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
      - name: tmp-volume
        emptyDir:
          sizeLimit: 500Mi
